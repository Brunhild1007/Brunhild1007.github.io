<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>sql语句复习</title>
      <link href="/2020/07/09/sql%E8%AF%AD%E5%8F%A5%E5%A4%8D%E4%B9%A0/"/>
      <url>/2020/07/09/sql%E8%AF%AD%E5%8F%A5%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h2><p><strong>例子1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">USE school</span><br><span class="line">GO</span><br><span class="line">--声明游标</span><br><span class="line">DECLARE st_cursor CURSOR FOR SELECT 学号,姓名,班号 FROM student</span><br><span class="line">--打开游标</span><br><span class="line">OPEN st_cursor</span><br><span class="line">--提取第一行数据</span><br><span class="line">FETCH NEXT FROM st_cursor</span><br><span class="line">--关闭游标</span><br><span class="line">CLOSE st_cursor</span><br><span class="line">--释放游标</span><br><span class="line">DEALLOCATE st_cursor</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><strong>例子2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">USE school</span><br><span class="line">ALTER TABLE score ADD 等级char(2)</span><br><span class="line">GO</span><br><span class="line">DECLARE st_cursor CURSOR </span><br><span class="line">   FOR SELECT 分数FROM score WHERE 分数IS NOT NULL</span><br><span class="line">DECLARE @fs int,@dj char(1)</span><br><span class="line">OPEN st_cursor</span><br><span class="line">FETCH NEXT FROM st_cursor INTO @fs</span><br><span class="line">WHILE @@FETCH_STATUS &#x3D; 0</span><br><span class="line">BEGIN</span><br><span class="line">  SET @dj&#x3D;CASE</span><br><span class="line">    WHEN @fs&gt;&#x3D;90 THEN &#39;A&#39; </span><br><span class="line">    WHEN @fs&gt;&#x3D;80 THEN &#39;B&#39; </span><br><span class="line">    WHEN @fs&gt;&#x3D;70 THEN &#39;C&#39; </span><br><span class="line">    WHEN @fs&gt;&#x3D;60 THEN &#39;D&#39; </span><br><span class="line">    ELSE &#39;E&#39; </span><br><span class="line">  END</span><br><span class="line">  UPDATE score</span><br><span class="line">  SET 等级&#x3D;@dj</span><br><span class="line">  WHERE CURRENT OF st_cursor </span><br><span class="line">  FETCH NEXT FROM st_cursor INTO @fs</span><br><span class="line">END</span><br><span class="line">CLOSE st_cursor</span><br><span class="line">DEALLOCATE st_cursor</span><br><span class="line">GO</span><br><span class="line">SELECT * FROM score ORDER BY 学号</span><br><span class="line">GO</span><br><span class="line">ALTER TABLE score DROP COLUMN 等级</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h2 id="数据库创建和删除"><a href="#数据库创建和删除" class="headerlink" title="数据库创建和删除"></a>数据库创建和删除</h2><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">use master</span><br><span class="line">go</span><br><span class="line">if exists(select * from sysdatabases where name&#x3D;&#39;TTT&#39;)</span><br><span class="line">drop database TTT</span><br><span class="line">create database TTT</span><br><span class="line">on</span><br><span class="line">(</span><br><span class="line">name&#x3D;&#39;TTT&#39;,</span><br><span class="line">filename&#x3D;&#39;D:\DB\TTT.MDF&#39;,</span><br><span class="line">size &#x3D; 10mb,</span><br><span class="line">maxsize&#x3D;100mb,</span><br><span class="line">filegrowth&#x3D;10mb</span><br><span class="line">)</span><br><span class="line">log on </span><br><span class="line">(</span><br><span class="line">name&#x3D;&#39;TTT_log&#39;,</span><br><span class="line">filename&#x3D;&#39;D:\DB\TTT_log.ldf&#39;,</span><br><span class="line">size&#x3D;2mb,</span><br><span class="line">maxsize&#x3D;20mb,</span><br><span class="line">filegrowth&#x3D;1mb</span><br><span class="line">)</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p><strong>1、建立表索引</strong></p><p>  create index 索引名 on 表名(列名，列名);</p><p><strong>2、删除表索引</strong></p><p>  If exists(select name from sysindexes where name=’索引名’)</p><p>​        drop index 表名.索引名;</p><p><strong>3、查看表索引</strong></p><p>  Select * from sysibm.sysindexes where tbname=’表名’;  —表名区分大小写</p><p><strong>4、查看索引</strong></p><p>​    Exec sp_helpindex 表名</p><p><strong>5、索引禁用</strong></p><p>​    Alter index 索引名 on 表名 disable</p><p><strong>6、索引启用</strong></p><p>​    Alter index 索引名 on 表名 rebuild</p><p><strong>7、修改索引</strong></p><p>​    Alter index 索引名 on 表名 rebuild with (PAD_INDEX=ON,FILLFACTOR=90)</p><p>//将填充因子改为90</p><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p><strong>1、</strong> <strong>创建视图</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Create view 视图名</span><br><span class="line"></span><br><span class="line">As</span><br><span class="line"></span><br><span class="line">​    Select * from 表名</span><br><span class="line"></span><br><span class="line">​    【where-------】</span><br><span class="line"></span><br><span class="line">Go</span><br></pre></td></tr></table></figure><p><strong>2、</strong> <strong>删除视图</strong></p><p>If object_id(‘视图名’,’V’) is not null //如果视图存在则删除</p><p>Drop view 视图名</p><p><strong>3、</strong> <strong>查询视图</strong></p><p>Select * from 视图名</p><p><strong>4、</strong> <strong>修改视图</strong></p><p>Alter view 视图名</p><p>As </p><p>select语句</p><p><strong>5、</strong> <strong>更改数据</strong></p><p>Update 视图名 set 列名=‘xxx’ where 列名=‘xxx’</p><p><strong>6、</strong> <strong>插入记录</strong></p><p>Insert into 视图名(列名1，列名2，列名3) values(xxx,xxx,xxx)</p><p><strong>7、</strong> <strong>删除记录</strong></p><p>Delete 视图名 where 列名=‘xxx’</p><p><strong>8、</strong> <strong>查看视图信息</strong></p><p>Exec sp_helptext 视图名</p><p><strong>9、</strong> <strong>重命名视图</strong></p><p>**Exec sp_rename ‘原视图名‘，’现视图名’</p><h2 id="ALTER语句"><a href="#ALTER语句" class="headerlink" title="ALTER语句"></a>ALTER语句</h2><p><strong>1：向表中添加字段</strong></p><p>Alter table [表名] add [列名] 类型</p><p><strong>2:</strong> <strong>删除字段</strong></p><p>Alter table [表名] drop column [列名]</p><p><strong>3:</strong> <strong>修改表中字段类型</strong> <strong>（可以修改列的类型，是否为空）</strong></p><p>Alter table [表名] alter column [列名] 类型</p><p><strong>4</strong>：<strong>添加主键</strong></p><p>Alter table [表名] add constraint [ 约束名] primary key( [列名])</p><p><strong>5</strong>：<strong>添加唯一约束</strong></p><p>Alter table [表名] add constraint [ 约束名] unique([列名])</p><p><strong>6：添加表中某列的默认值</strong></p><p>Alter table [表名] add constraint [约束名] default(默认值) for [列名]<br> <strong>7</strong>：<strong>添加约束</strong></p><p>Alter table [表名] add constraint [约束名] check (内容)</p><p><strong>8:</strong>添加外键约束</p><p> Alter table [表名] add constraint [约束名] foreign key(列名) references 另一表名(列名)</p><p><strong>9:</strong>删除约束</p><p>Alter table [表名] drop constraint [约束名] </p><p><strong>10:</strong>重命名表</p><p>exec sp_rename ‘[原表名]’,’[新表名]’</p><p><strong>11</strong>：重命名列名</p><p>exec sp_rename ‘[表名].[列名]’,’[表名].[新列名]’</p><p> <strong>12：删除主键，以及主键上的索引</strong></p><p>alter table table_name drop constraint clusteredName</p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>l <strong>PRIMARY KEY约束（Q:怎么在创建表的时候选择两个属性作为主键）</strong></p><p><strong>例子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table table7</span><br><span class="line">(</span><br><span class="line">c1 int,c2 int, c3 char(5),c4 char(10),</span><br><span class="line"> constraint pk_1 primary key(c1,c2)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>l <strong>FOREIGN KEY约束</strong></p><p>l <strong>UNIQUE约束</strong></p><p>l <strong>CHECK约束</strong></p><p>l <strong>NOT NULL（非空性）</strong></p><p>| <strong>表约束</strong></p><p>​      列约束可以作为列定义的一部分，并且仅适用于指定的那个列。表约束的定义与列定义无关，可以适用于表中一个以上的列。列约束和表约束均在创建表或修改表时通过<strong>CONSTRAINT</strong>关键字来指定。</p><p>​    当一个约束中必须包含一个以上的列时，必须使用表约束。例如，如果一个表的主键内有两个或两个以上的列，则必须使用表约束将这两个列加入主键内。</p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p> <strong>1.规则创建</strong></p><p> create rule 规则名 as 规则</p><p><strong>2.绑定规则</strong></p><p>sp_bindrule ‘规则名’，’绑定规则的表和列名’</p><p>例：EXEC sp_bindrule ‘rule1’,’table9.c1’</p><p><strong>3.解除绑定</strong></p><p>exec sp_unbindrule ‘表名.列名’</p><p><strong>4.删除规则</strong></p><p>drop rule 规则名</p><h2 id="事务处理"><a href="#事务处理" class="headerlink" title="事务处理"></a>事务处理</h2><h3 id="一、显式事务"><a href="#一、显式事务" class="headerlink" title="一、显式事务"></a>一、显式事务</h3><p><strong>1.启动事务</strong></p><p>begin tran【saction】</p><p><strong>2.结束事务</strong></p><p>commit 【train【saction】】</p><p><strong>3.回滚事务</strong></p><p>rollback【tran【saction】】</p><p><strong>4.例子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">begin transaction</span><br><span class="line">insert into table7 values(0,0,&#39;dd&#39;,&#39;123&#39;)</span><br><span class="line">commit</span><br><span class="line">go</span><br><span class="line">select* from table7</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>5.保存点</strong></p><p>save tran【saction】 保存点名称</p><p><strong>例子</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use test </span><br><span class="line">go</span><br><span class="line">begin transaction</span><br><span class="line">insert into table7 values(0,0,&#39;ee&#39;,&#39;456&#39;)</span><br><span class="line">save transaction save1</span><br><span class="line">insert into table7 values(0,0,&#39;ff&#39;,&#39;789&#39;)</span><br><span class="line">rollback transaction save1</span><br><span class="line">commit transaction</span><br><span class="line">go</span><br><span class="line">select * from table7</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>PS：</strong>如创建、删除和修改数据库的操作是不能撤销的</p><h3 id="二、自动提交事务"><a href="#二、自动提交事务" class="headerlink" title="二、自动提交事务"></a>二、自动提交事务</h3><h3 id="三、隐性事务"><a href="#三、隐性事务" class="headerlink" title="三、隐性事务"></a>三、隐性事务</h3><h3 id="四、事务和异常处理"><a href="#四、事务和异常处理" class="headerlink" title="四、事务和异常处理"></a>四、事务和异常处理</h3><p>直接上例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">create table table3(no char(5) unique)</span><br><span class="line">go</span><br><span class="line">begin try</span><br><span class="line">begin transaction mytrans</span><br><span class="line">insert into table3 values(&#39;aaa&#39;)</span><br><span class="line">insert into table3 values(&#39;aaa&#39;)</span><br><span class="line">commit transaction mytrans</span><br><span class="line">end try</span><br><span class="line">begin catch</span><br><span class="line">select error_number() as&#39;错误号&#39;,error_message()as&#39;错误信息&#39;</span><br><span class="line">rollback transaction mytrans</span><br><span class="line">end catch</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>分析：该程序在test数据库中建立一个表table3，含一个唯一值的列no。事务Mytrans用于插入2个相同的记录，由CATCH捕捉到错误，然后执行事务回滚。程序执行时显示的出错消息如图所示。该程序执行后，会建立table3表，但表中没有任何记录。</strong></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="一、标量值函数"><a href="#一、标量值函数" class="headerlink" title="一、标量值函数"></a>一、标量值函数</h3><p>返回单个数据值</p><p><strong>（使用create function语句创建）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION 函数名</span><br><span class="line">( [ &#123;@参数名 [AS] 参数数据类型 [ &#x3D;默认值 ] [ READONLY ] &#125; [ ,…n ]</span><br><span class="line">  ])</span><br><span class="line">RETURNS 返回数据类型 [AS]</span><br><span class="line">    BEGIN </span><br><span class="line">        函数体</span><br><span class="line">        RETURN 标量表达式</span><br><span class="line">    END</span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_ID(&#39;cu&#39;,&#39;FN&#39;) is not null</span><br><span class="line">drop function cu</span><br><span class="line">go</span><br><span class="line">create function cu (@c1 int ,@c2 int,@c3 int)</span><br><span class="line">returns int</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">return(@c1*@c2*@c3)</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">print &#39;立方体体积为：&#39;+cast(dbo.cu(6,4,3) as char(10))</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h3 id="二、内联表值函数"><a href="#二、内联表值函数" class="headerlink" title="二、内联表值函数"></a>二、内联表值函数</h3><p>返回table数据类型（无begin…end语句块构成的函数体）</p><p><strong>内联表值函数的特点是返回table变量，自动将其中的SELECT语句（只能有一个SELECT语句，因而不需要BEGIN…END括起来）的查询结果插入到该变量中，然后将该变量作为返回值返回。</strong></p><p><strong>（使用create function语句创建）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION 函数名</span><br><span class="line">( [ &#123;@参数名 [AS] 参数数据类型 [ &#x3D;默认值 ] [ READONLY ] &#125; [ ,…n ]</span><br><span class="line">  ])</span><br><span class="line">RETURNS TABLE [AS] RETURN [(]select语句[)]</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;f1&#39;,&#39;if&#39;) is not null</span><br><span class="line"> drop function f1</span><br><span class="line">go</span><br><span class="line">create function f1(@c1 char(10))</span><br><span class="line">returns table</span><br><span class="line">as</span><br><span class="line">return</span><br><span class="line">(</span><br><span class="line">select t.c1,t.c3</span><br><span class="line">from table7 t</span><br><span class="line">where t.c4&#x3D;@c1</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">select * from f1(&#39;456&#39;)</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h3 id="三、多语句表值函数"><a href="#三、多语句表值函数" class="headerlink" title="三、多语句表值函数"></a>三、多语句表值函数</h3><p>  多语句表值需要使用BEGIN…END，其中可以包含多个T-SQL语句，可以包含聚合函数。返回值表中的数据是由函数体中insert语句插入的。</p><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;f2&#39;,&#39;tf&#39;) is not null</span><br><span class="line">drop function f2</span><br><span class="line">go</span><br><span class="line">create function f2(@c1 char(10))</span><br><span class="line">returns @st table</span><br><span class="line">(</span><br><span class="line">c1 int,</span><br><span class="line">c4 char(10)</span><br><span class="line">)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">insert @st</span><br><span class="line">select table7.c1,table7.c4</span><br><span class="line">from table7</span><br><span class="line">where table7.c3&#x3D;@c1</span><br><span class="line">return</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">select * from f2(&#39;dd&#39;)</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>删除用户定义函数</strong></p><p>drop function 函数名</p><p><strong>例题：</strong></p><p>设计一个用户定义函数funstud3，根据学号得到该学生的学号、姓名、课程名和成绩等级（分数≥90为优秀，否则分数≥80为良好，否则分数≥70为中等，否则分数≥60为及格，其他为不及格）列表。并输出学号为‘105’的学生结果集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">use School3148</span><br><span class="line">if object_id(&#39;f3&#39;,&#39;TF&#39;) is not null</span><br><span class="line">drop function f3</span><br><span class="line">go</span><br><span class="line">create function f3(@num int)</span><br><span class="line">returns @st table</span><br><span class="line">(</span><br><span class="line">sno int,</span><br><span class="line">name char(10),</span><br><span class="line">cname char(20),</span><br><span class="line">rank1 char(6)</span><br><span class="line">)</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">insert @st</span><br><span class="line">select student3148.学号,Student3148.姓名,course.CourseName,</span><br><span class="line">case </span><br><span class="line">when score.Score&gt;&#x3D;90 then &#39;A&#39;</span><br><span class="line">when score.score&gt;&#x3D;80 then &#39;B&#39;</span><br><span class="line">when score.score&gt;&#x3D;70 then &#39;C&#39;</span><br><span class="line">when score.score&gt;&#x3D;60 then &#39;D&#39;</span><br><span class="line">when score.score&lt;60 then &#39;E&#39;</span><br><span class="line">end as &#39;等级&#39;</span><br><span class="line">from Student3148,course,score</span><br><span class="line">where Student3148.学号&#x3D;score.Num and score.CourseNum&#x3D;course.CourseNum and student3148.学号&#x3D;@num</span><br><span class="line">order by course.CourseName</span><br><span class="line">return</span><br><span class="line">end</span><br><span class="line">go </span><br><span class="line">select * from f3(&#39;2018123148&#39;)</span><br></pre></td></tr></table></figure><p>另外这一题也可以用内联表值函数做</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">use school3148</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;f1&#39;,&#39;if&#39;) is not null</span><br><span class="line">drop function f1</span><br><span class="line">go</span><br><span class="line">create function f1(@num char(10))</span><br><span class="line">returns table</span><br><span class="line">as</span><br><span class="line">return</span><br><span class="line">(</span><br><span class="line">select student3148.学号,Student3148.姓名,course.CourseName,</span><br><span class="line">case </span><br><span class="line">when score.Score&gt;&#x3D;90 then &#39;A&#39;</span><br><span class="line">when score.score&gt;&#x3D;80 then &#39;B&#39;</span><br><span class="line">when score.score&gt;&#x3D;70 then &#39;C&#39;</span><br><span class="line">when score.score&gt;&#x3D;60 then &#39;D&#39;</span><br><span class="line">when score.score&lt;60 then &#39;E&#39;</span><br><span class="line">end as &#39;等级&#39;</span><br><span class="line">from Student3148,course,score</span><br><span class="line">where Student3148.学号&#x3D;score.Num and score.CourseNum&#x3D;course.CourseNum and student3148.学号&#x3D;@num</span><br><span class="line">)</span><br><span class="line">go</span><br><span class="line">select *from f1(&#39;2018123148&#39;)</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><p><strong>1.创建存储过程</strong></p><p>create procedure 存储过程名 as sql语句</p><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;stud&#39;,&#39;P&#39;) is not null</span><br><span class="line"> drop procedure stud</span><br><span class="line">go</span><br><span class="line">create procedure stud</span><br><span class="line">as</span><br><span class="line">select table7.c1,table7.c3</span><br><span class="line">from table7</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>带参数的的存储过程的创建</p><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use test </span><br><span class="line">go</span><br><span class="line">if object_id(&#39;t7&#39;,&#39;p&#39;) is not null</span><br><span class="line">drop procedure t7</span><br><span class="line">go</span><br><span class="line">create procedure t7(@t char(10))</span><br><span class="line">as</span><br><span class="line">select t.c1,t.c2,t.c3</span><br><span class="line">from table7 t</span><br><span class="line">where t.c4&#x3D;@t</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>也可以在创建时为参数指定默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(@t char(10)&#x3D;&#39;132&#39;)</span><br></pre></td></tr></table></figure><p><strong>带返回参数的存储过程</strong></p><p>在创建存储过程的时候在参数后面添加 output</p><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">use test </span><br><span class="line">go</span><br><span class="line">if object_id(&#39;t7&#39;,&#39;p&#39;) is not null</span><br><span class="line">drop procedure t7</span><br><span class="line">go</span><br><span class="line">create procedure t7</span><br><span class="line">(@t char(10),@o1 int output,@o2 int output,@o3 char(5) output)</span><br><span class="line">as</span><br><span class="line">select @o1&#x3D;t.c1,@o2&#x3D;t.c2,@o3&#x3D;t.c3</span><br><span class="line">from table7 t</span><br><span class="line">where t.c4&#x3D;@t</span><br><span class="line">go</span><br><span class="line">declare @r1 int</span><br><span class="line">declare @r2 int</span><br><span class="line">declare @r3 char(5)</span><br><span class="line">exec t7 &#39;456&#39;,@r1 output,@r2 output,@r3 output</span><br><span class="line">select &#39;c1&#39;&#x3D;@r1,&#39;c2&#39;&#x3D;@r2,&#39;c3&#39;&#x3D;@r3</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>2.执行存储过程</strong></p><p>exec 存储过程名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec stud</span><br></pre></td></tr></table></figure><p>exec 存储过程名 参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec t7 123</span><br></pre></td></tr></table></figure><p><strong>3.修改存储过程</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER PROC[EDURE] 存储过程名[&#123;参数列表&#125;]</span><br><span class="line">    　　AS SQL语句</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter procedure t6 </span><br><span class="line">as</span><br><span class="line">select c1 from table7</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p><strong>4.修改存储过程</strong></p><p>drop procedure 用户存储过程列表</p><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><p>l <strong>DML触发器：在执行数据操作语言（DML）事件时被调用的触发器，包括INSERT、UPDATE和DELETE语句。</strong></p><p>l <strong>DDL触发器：在执行数据定义语言（DDL）事件时被调用的触发器，包括CREATE、ALTER和DROP语句。</strong></p><p>l <strong>登录触发器：为响应登录事件而触发的存储过程。</strong></p><h3 id="一、DML事件"><a href="#一、DML事件" class="headerlink" title="一、DML事件"></a>一、DML事件</h3><p>l <strong>AFTER触发器：在执行触发事件之后执行AFTER触发器。如果违反了约束，则永远不会执行AFTER触发器；<em>因此，这些触发器不能用于任何可能防止违反约束的处理</em>。</strong></p><p>l <strong>INSTEAD OF触发器：INSTEAD OF触发器替代触发器语句的标准操作。因此，触发器可用于对一个或多个列执行错误或值检查，<em>然后在插入、更新或删除行之前执行其他操作</em>。</strong></p><p><strong>1.创建触发器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER  触发器名 </span><br><span class="line">ON &#123;表名 | 视图名&#125; [WITH ENCRYPTION] </span><br><span class="line">&#123;    &#123; &#123;FOR | AFTER | INSTEAD OF&#125; &#123;[INSERT] [,] [UPDATE][,] [DELETE]&#125;</span><br><span class="line">          [NOT FOR REPLICATION]</span><br><span class="line">          AS</span><br><span class="line">           [&#123; IF UPDATE (列名)</span><br><span class="line">               [&#123; AND | OR &#125; UPDATE (列名)] […n] &#125; ] </span><br><span class="line">          SQL语句 […n ]</span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">create trigger tg</span><br><span class="line">on</span><br><span class="line">table7 after insert,update,delete</span><br><span class="line">as</span><br><span class="line">select * from table7</span><br><span class="line">go</span><br><span class="line">insert table7(c1) values(1)</span><br></pre></td></tr></table></figure><p><strong>2.删除触发器</strong></p><p>drop trigger 触发器名</p><p><strong>3.禁用触发器</strong></p><p>disable trigger  触发器名 on 表名</p><p><strong>4.启用触发器</strong></p><p>enable trigger 触发器 on 表名</p><p><strong>5.instead of 触发器</strong></p><p>–例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;trigscore&#39;,&#39;TR&#39;) is not null</span><br><span class="line"> drop trigger trigscore</span><br><span class="line">go</span><br><span class="line">create trigger trigscore on table7</span><br><span class="line">instead of insert</span><br><span class="line">as</span><br><span class="line">if not exists(</span><br><span class="line">select * from table7</span><br><span class="line">where c1&#x3D;(select c1 from inserted))</span><br><span class="line">begin</span><br><span class="line">rollback transaction</span><br><span class="line">print&#39;要处理的字段不存在&#39;</span><br><span class="line">end</span><br><span class="line">else</span><br><span class="line">begin</span><br><span class="line">insert into table7 select * from inserted</span><br><span class="line">print&#39;已经成功处理记录&#39;</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">insert table7(c1,c4) values(100,&#39;lolol&#39;)</span><br></pre></td></tr></table></figure><h4 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h4><p>–例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;trig&#39;,&#39;TR&#39;) is not null</span><br><span class="line"> drop trigger trig</span><br><span class="line"> go</span><br><span class="line">create trigger trig</span><br><span class="line">on table7 after insert</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">declare @temp int</span><br><span class="line">select @temp&#x3D;inserted.c1 from inserted</span><br><span class="line">if exists(select c1 from table7 where c1&#x3D;@temp)</span><br><span class="line">begin</span><br><span class="line">raiserror(&#39;数据重复，不能插入&#39;,16,1)</span><br><span class="line">rollback</span><br><span class="line">end</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">insert table7(c1) values(1)</span><br></pre></td></tr></table></figure><h4 id="update"><a href="#update" class="headerlink" title="update"></a>update</h4><p>–例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;trigno&#39;,&#39;TR&#39;) is not null</span><br><span class="line"> drop trigger trigno</span><br><span class="line">go</span><br><span class="line">create trigger trigno on table7 </span><br><span class="line">after update</span><br><span class="line">as</span><br><span class="line">if update (c4)</span><br><span class="line">begin</span><br><span class="line">raiserror(&#39;不能修改c4&#39;,16,2)</span><br><span class="line">rollback</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">update table7 set c4&#x3D;&#39;7777&#39; where c3&#x3D;&#39;dd&#39;</span><br></pre></td></tr></table></figure><h4 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h4><p>–例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">if object_id(&#39;trigclass&#39;,&#39;TR&#39;) is not null</span><br><span class="line">drop trigger trigcalss</span><br><span class="line">go</span><br><span class="line">create trigger trigclass on table7</span><br><span class="line">after delete</span><br><span class="line">as</span><br><span class="line">if exists(select * from deleted where c2&#x3D;102)</span><br><span class="line">begin</span><br><span class="line">raiserror(&#39;不能删除c2&#x3D;102的记录&#39;,16,2)</span><br><span class="line">rollback</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">delete table7 where c2&#x3D;102</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h3 id="二、DDL事件"><a href="#二、DDL事件" class="headerlink" title="二、DDL事件"></a>二、DDL事件</h3><p><strong>创建语句：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER 触发器名称</span><br><span class="line">ON &#123;ALL SERVER|DATABASE&#125; </span><br><span class="line">&#123;FOR|AFTER&#125; &#123;event_type|event_group&#125;[,…n]</span><br><span class="line">AS SQL语句</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use test</span><br><span class="line">go</span><br><span class="line">create trigger safe</span><br><span class="line">on database after drop_table,alter_table</span><br><span class="line">as</span><br><span class="line">begin</span><br><span class="line">raiserror(&#39;不能修改表结构&#39;,16,2)</span><br><span class="line">rollback</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">alter table table7 add c5 char(10)</span><br></pre></td></tr></table></figure><h4 id="create"><a href="#create" class="headerlink" title="create"></a>create</h4><h4 id="alter"><a href="#alter" class="headerlink" title="alter"></a>alter</h4><h4 id="drop"><a href="#drop" class="headerlink" title="drop"></a>drop</h4><h3 id="三、登陆事件"><a href="#三、登陆事件" class="headerlink" title="三、登陆事件"></a>三、登陆事件</h3><h4 id="logon"><a href="#logon" class="headerlink" title="logon"></a>logon</h4><p>–例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE master</span><br><span class="line">GO</span><br><span class="line">CREATE TRIGGER triglogin ON ALL SERVER</span><br><span class="line">FOR CREATE_LOGIN</span><br><span class="line">AS</span><br><span class="line">   PRINT &#39;不允许建立登录账号&#39;</span><br><span class="line">   ROLLBACK</span><br><span class="line">GO</span><br><span class="line">create login abc with password &#x3D; &#39;123456&#39;</span><br></pre></td></tr></table></figure><h3 id="四、inserted表和deleted表"><a href="#四、inserted表和deleted表" class="headerlink" title="四、inserted表和deleted表"></a>四、inserted表和deleted表</h3><p>l <strong>deleted表用于存储DELETE和UPDATE语句所影响的行的副本。在执行DELETE或UPDATE语句时，行从触发器表中删除，并传输到deleted表中。deleted表和触发器表通常没有相同的行。</strong></p><p>l <strong>inserted表用于存储INSERT和UPDATE语句所影响的行的副本。在一个插入或更新事务处理中，新建行被同时添加到inserted表和触发器表中。inserted表中的行是触发器表中新行的副本。</strong></p><h3 id="五、使用ALTER-TRIGGER语句修改触发器"><a href="#五、使用ALTER-TRIGGER语句修改触发器" class="headerlink" title="五、使用ALTER TRIGGER语句修改触发器"></a>五、使用ALTER TRIGGER语句修改触发器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ALTER TRIGGER 触发器名称 ON( 表名 | 视图名 ) </span><br><span class="line">[ WITH ENCRYPTION ] </span><br><span class="line">&#123; </span><br><span class="line">    &#123; (FOR | AFTER | INSTEAD OF) &#123;[DELETE] [,] [INSERT] [,] [UPDATE]   &#125;</span><br><span class="line">        [NOT FOR REPLICATION]</span><br><span class="line">        AS</span><br><span class="line">        SQL语句 […n]</span><br><span class="line">    &#125;   </span><br><span class="line">    |  &#123; (FOR | AFTER | INSTEAD OF) &#123; [INSERT] [,] [UPDATE] &#125;</span><br><span class="line">            [NOT FOR REPLICATION]</span><br><span class="line">           AS</span><br><span class="line">              &#123;IF UPDATE(列)</span><br><span class="line">                 [ &#123; AND | OR &#125; UPDATE (列) ] […n] </span><br><span class="line">            SQL语句 […n] </span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全管理"><a href="#安全管理" class="headerlink" title="安全管理"></a>安全管理</h2><h3 id="一、登录账号"><a href="#一、登录账号" class="headerlink" title="一、登录账号"></a>一、登录账号</h3><h4 id="1-创建登录账号"><a href="#1-创建登录账号" class="headerlink" title="1.创建登录账号"></a>1.创建登录账号</h4><p>create login 登录名 with 【password=’密码’】</p><h4 id="2-修改和删除登录名"><a href="#2-修改和删除登录名" class="headerlink" title="2.修改和删除登录名"></a>2.修改和删除登录名</h4><p>alter login 登录名 with 【password=‘密码’，name=新的登录名称】 </p><p>drop login 登录名</p><h3 id="二、用户账号"><a href="#二、用户账号" class="headerlink" title="二、用户账号"></a>二、用户账号</h3><h4 id="1-创建用户账号"><a href="#1-创建用户账号" class="headerlink" title="1.创建用户账号"></a>1.创建用户账号</h4><p>create user 用户名 </p><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user u1 for login lo1 with default_schema&#x3D;dbo</span><br></pre></td></tr></table></figure><h4 id="2-修改用户账号"><a href="#2-修改用户账号" class="headerlink" title="2.修改用户账号"></a>2.修改用户账号</h4><p>alter user 用户名 with name=新用户名</p><h4 id="3-删除用户账号"><a href="#3-删除用户账号" class="headerlink" title="3.删除用户账号"></a>3.删除用户账号</h4><p>drop user 用户名</p><h3 id="三、权限和角色"><a href="#三、权限和角色" class="headerlink" title="三、权限和角色"></a>三、权限和角色</h3><h4 id="1-授予权限"><a href="#1-授予权限" class="headerlink" title="1.授予权限"></a>1.授予权限</h4><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant alter,delete,insert,select,update on table7 to user1</span><br></pre></td></tr></table></figure><h4 id="2-禁止或撤销权限"><a href="#2-禁止或撤销权限" class="headerlink" title="2.禁止或撤销权限"></a>2.禁止或撤销权限</h4><p>禁止：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deny delete on table7 to user1</span><br></pre></td></tr></table></figure><p>撤销：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remoke create table to user1</span><br></pre></td></tr></table></figure><h4 id="3-角色"><a href="#3-角色" class="headerlink" title="3.角色"></a>3.角色</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/14/hello-world/"/>
      <url>/2020/06/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
